name: Cache Node and NPM Dependencies

description: "This action allows to cache both Node and NPM dependencies based on the package-lock.json file."

inputs:
  node-version:
      description: "NodeJS version to setup"
      default: "20.x"
      required: true
  working-dir:
    description: "Working directory where package-lock.json and node_modules are located"
    default: "."
    required: false
  target-env:
    description: " Controls weather dev deps are installed"
    default: "dev"
    required: false

runs:
  using: composite
  steps:
    - name: Setup NodeJS version ${{ inputs.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.node-version }}
    - name: Cache Dependencies
      id: cache
      uses: actions/cache@v4
      with:
        path: ${{ inputs.working-dir }}/node_modules
        key: node-modules-${{ hashFiles(format('{0}/{1}',inputs.working-dir, 'package-lock.json')) }}
    # - name: "Install dependencies if not cached"
    #   if: steps.cache.outputs.cache-hit != 'true' && inputs.target-env == 'dev'
    #   run: npm ci
    #   shell: bash
    #   working-directory: ${{ inputs.working-dir }}
    # - name: "Install dependencies if not cached"
    #   if: steps.cache.outputs.cache-hit != 'true' && inputs.target-env != 'dev'
    #   run: npm ci --omit=dev
    #   shell: bash
    #   working-directory: ${{ inputs.working-dir }}
    # OR
    - name: "Install dependencies if not cached"
      if: steps.cache.outputs.cache-hit != 'true'
      run: ${{ inputs.target-env == 'dev' && 'npm ci' || 'npm ci --omit=dev'}}
      shell: bash
      working-directory: ${{ inputs.working-dir }}